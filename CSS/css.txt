CSS = Cascading Style Sheets

Cascade = like a waterfall
style Sheets  = type of language 

CSS
Sass
Less



3 ways to adding styles

inline = <tag style="css" />

<tag  attribute  =   property : value
<html style      = "background: blue"> </html>  

````````````````````````````````````````````````````````
internal = <style> css </style>

<html>
    <head>
        <style>
            html {  = selector      (element)
                background: red;
            }
        </style>
    </head>
</html>

`````````````````````````````````````````````````````````

external = <link href="style.css"/>

==   index.html ( HTML FILE )
<html>
    <head>
                relationship        loction 
        <link rel="stylesheet" href="./styles.css" />
    </head>
</html>

== styles.css ( CSS FILE )
html{
    background: green;
}



CSS Selector = 

Class selector = (.CallName)  ;

ID selector = (#IDName);   It must be Unique and not be repeted

attribute selector = ( tagName[attribute="Value"]{} )   This is how you can select the ussing attribute selector  
                                                    beware now use break in between the tag name and the attribute value

Universal selector = [*{} ]



Color Property:

background-color: value;
color: value;     
        Value = hexCode, rgb, rgbh 
website ( color Hunt, mdn color, )



Font Family Property:

font size: value;   20px 

1px = 1/96th inch       (Pixel)
1pt = 1/72nd inch       (Point)
1em = 100% of parent size     (Relatize Size of the parent tag size ) 
1rem = 100% of root     (Relative size of the root size)


font weight: value;

normal bold
lighter bolder
number : 100-900 ;
    lighter-bolder

font-family: helvetica, sans-serif, "Times New Roman", serif;
           :Typeface


text align

text-align: value; (center, left, right, start, end);


DIV == Content Division Element 

=> <div> Content </div>


```````````````````````````````````````````````````````````````````````````````````````````````````````
Cascade -=  

Specificity and inheritance property


Position
li{
    color: red;
    color: blue;
    it apply both color on li => but the conciquences = it it red and then imediatly it convert into blue => and it show blue 
}

````````Condition                               Type            Importance

Specificity 

li {color: red;}                                Element             4
.first-class { color: red;}                     Class               3
li[draggable]{color: purple;}                   Attribute           2   
#first-id{color: orange}                        ID                  1


Type

<link rel="stylesheet" href="./style.css">      External            3
<style></style>                                 Internal            2
<h1 style=""> hello </h1>                       Inline              1

Inportance

color: red;                                                         2
color: green !important;                                            1


```````````````````````````````````````````````````````````````````````````````````````````````````````

CSS Combining selectors

1. Group   using ( , )   =  Apply to both selectors

selector, selector{
    color: bluevoilet;
}

2. Child  using ( > ) = Apply to direct child of left side

(parent  > chiled  )
selector > selector {
    color: firebrick;
}

3. Descendant  (   ) = Apply to a Descendant of left side

ansister  desendent 

selector selector {
    color: blue;
}

Chaining  () = Apply where All selectors are true

4. Specific
selectorselector{
    color: seagreen;
}

                    <h1 id="title" class="big heading" > helloworld </h1>

eg. h1#title.big.heading    ( super super strong selector and it's specific ) 
Remember there is no space between them and always go with the same order like above and the h1 tag


5. Combining Combiners

ansister chainingMethod
selector selectorselector {
    font-size: 0.5rem;
}






